//z is input signal indicating zero result
//v is input signal indicating operation overflow
//n is input signal indicating negative value
//output cmp indicates comparison result 

module compare (
    input z,
    input v,
    input n,
    input alufn_signal[6],
    output cmp
  ) {
  //internal signal that holds the result of n XOR v
  sig nxorv;

  
  always {
    nxorv = n ^ v;
    case (alufn_signal[2:1]) {
      default: cmp = 0;

      b01: cmp = z;
      b10: cmp = nxorv;
      b11: cmp = z | nxorv;
    }
  }
}
