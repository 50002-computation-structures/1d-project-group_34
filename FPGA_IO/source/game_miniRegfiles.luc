//the regfile for all game information
module game_miniRegfiles (
    input clk,  // clock
    input rst,  // reset
    input write_address[4], // write address
    input we, // write enable
    input data[16], // data in
    
    
    input read_address_a[4], //address port a 
    input read_address_b[4], //address port b
    output out_a[16], //read port a
    output out_b[16], //read port b

    
    //debug
    output timer[16],
    output all_scores[32],
    output all_buttons[4]


  ) 

{
  .clk(clk){
    .rst(rst){
      dff p1_x[16](#INIT(0));
      dff p1_y[16](#INIT(0));
      dff p2_x[16](#INIT(0));
      dff p2_y[16](#INIT(0));
      dff p1_result[16](#INIT(0));
      dff p2_result[16](#INIT(0));
      dff map[16](#INIT(0));
      dff temp_var[16](#INIT(0));
      dff current_timer[16](#INIT(0));
    }
  }

  always {
  
    //write port
    if (we){
      case(write_address){
        b0000 : p1_x.d = data;              // 0x0: Player 1 x coordinate
        b0001 : p1_y.d = data;              // 0x1: Player 1 y coordinate
        b0010 : p2_x.d = data;              // 0x2: Player 2 x coordinate
        b0011 : p2_y.d = data;              // 0x3: Player 2 y coordinate
        b0100 : p1_result.d = data;         // 0x4: Player 1 result
        b0101 : p2_result.d = data;         // 0x5: Player 2 result
        b0110 : map.d = data;               // 0x6: map    
        b0111 : current_timer.d = data;     // 0x7: Flash timer
        b1111 : temp_var.d = data;          // 0xF: temp reg
      }
    }
    
      
    //read port a
    case(read_address_a){
        b0000 : out_a = p1_x.q;
        b0001 : out_a = p1_y.q;
        b0010 : out_a = p2_x.q;
        b0011 : out_a = p2_y.q;
        b0100 : out_a = p1_result.q;
        b0101 : out_a = p2_result.q; 
        b0110 : out_a = map.q;        
        b0111 : out_a = current_timer.q;
        b1111 : out_a = temp_var.q;
        default : out_a = 0;
    }
    
    //read port b
    case(read_address_b){
        b0000 : out_b = p1_x.q;
        b0001 : out_b = p1_y.q;
        b0010 : out_b = p2_x.q;
        b0011 : out_b = p2_y.q;
        b0100 : out_b = p1_result.q;
        b0101 : out_b = p2_result.q; 
        b0110 : out_b = map.q;        
        b0111 : out_b = current_timer.q;
        b1111 : out_b = temp_var.q;
        default : out_b = 0;
    }
    

    
    //For debugging -- nat code; not edited
    /*all_scores[15:0] = p1_x.q;
    all_scores[31:16] = p2_score.q;
    all_buttons[1:0] = p1_buttonPress.q[1:0];
    all_buttons[3:2] = p2_buttonPress.q[1:0];
    timer = current_timer.q;*/

  }
}