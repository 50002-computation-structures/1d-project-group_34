//module rca takes in 16 bits a input and 16 bits b input (assigned in adder module as xor of b with alufn_signal[0])
//module rca takes in input ci which in our case assigned as alufn_signal[0] in adder module
//outputs 16 bits each bit represents sum output of each of the 16 full adders 
module rca (
    input a[16],
    input b[16],
    input ci,
    output s[16]
  ) {

//declare 16 full adders to be used
  fa fa[16];
  var i;
  
  always {
//set the inputs to the first unit LSB of the rca
    fa.a[0] = a[0];
    fa.b[0] = b[0];
    fa.ci[0] = ci;

//uses a for loop to set the carry out of the previous adder as the carry in of the ith adder
//sets the ith bit of a and b to the ith full adder a and b inputs
    for (i=1; i<16; i++) {//define the connectoions for the other 31 units of fa
      fa.a[i] = a[i];
      fa.b[i] = b[i];
      fa.ci[i] = fa.co[i-1];
    }
    
//assign the 16 output bits as the 16 individual output sum bits of the 16 full adders. 
    s = fa.s;
  }
}
