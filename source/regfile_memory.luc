module regfile_memory (
    input clk,  // clock
    input rst, // reset
    input read_address_1[5],
    input read_address_2[5],
    output reg_data_1[32],
    output reg_data_2[32],
    input write_address[5],
    input write_data[32],
    input write_enable
  ) {
  
  dff registers[32][32](#INIT(32x{{32h0}}), .clk(clk), .rst(rst));
  
  always {
  
    // initial setups to silence output compilation errors
    reg_data_1 = 0;
    reg_data_2 = 0;

    // TASK 7 
    // implement two output read ports
    if (read_address_1 == b11111){
      reg_data_1 = b0;}
      else {reg_data_1 = registers.q[read_address_1];}
      
    if (read_address_2 == b11111){
      reg_data_2 = b0;}
      else{reg_data_2 = registers.q[read_address_2];}
    
    // implement one write port 
    if (write_enable && write_address != b11111){
    registers.d[write_address] = write_data;}
      
    

    // check if(write_en) and that we are not writing to R31 
  
    // always give out 0 if we are reading R31 (from either RA ports)

  }
}
